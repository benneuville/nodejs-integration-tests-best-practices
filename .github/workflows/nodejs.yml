# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          npm-feature-${{ hashFiles('package-lock.json') }}
          npm-feature-
          npm-

    - run: sudo apt-get install -y docker-compose
    - run: npm ci
    # create an artifact for the build
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: .

    
  # run test in parallel

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-command: 
          - npm run test
          - npm run test:nestjs
          - npm run test:mocha
    steps:
      - uses: actions/checkout@v2
      - run: npm install 
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app
      - run: ${{ matrix.test-command }}


# check modifications jobs
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      source-code: ${{ steps.filter.outputs.src }}
      test: ${{ steps.filter.outputs.test }}
      libraries: ${{ steps.filter.outputs.libraries }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          source-code:
            - 'example-application/business-logic/**'
            - 'example-application/data-access/**'
            - 'example-application/entry-points/**'
            - 'recipes/**'
          libraries:
            - 'example-application/librairies/**'
          test:
            - 'example-application/test/**'
            - 'recipes/**'
          